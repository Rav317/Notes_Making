Yeah right we have discussed few datastructures like array and Ling lists howdata is stored in array what are thedifferent operations on array what islinked list or what are the differentoperations on linked list how data isstored in linked list right and now wewill see what is the stack datastructure so you can see it is a lineardata structure fine and seen array whatis their random access as possible youcan directly access any data in aconstant time in linked list what onlysequential access is possible rightwhat about stuck in stack only you cansay limited access is possible right oryou can say it is a ordered list what isthat it is an ordered list or you cansay it is a collection or you can say itis a container which is going to followa rule for insertion and deletion of thedata right and what is that rule or whatis that restriction you can say or whatis that principle right which that stackdata structure follow so that rule isinsertion and deletion is possible onlyfrom one end right this is applied onboth insertion and deletion insertionand deletion is possible from only oneend like you can take a real lifeexample suppose you have a CD standright like this you are going to put CDshere first CD then second third fourthfifth obviously like this you are goingto put suppose you want to insertanother CD in that case you have onlyone way to insert CD from the top onlyyou cannot insert CD here from thebottom you cannot insert from the leftor right the only way is from the toponly you can insert that CD right secondK says if you want to take out a CD fromthis series stand then what you will doonly one option you can take out fromthe top right suppose you want to takeoutin this city the first CD right so youdon't have any option the only option isfirst of all you will have to take outall the CDs which are placed above thisCD after that only you can take out thisCD right that is the restrictions oninsertion and deletion in stock fine soin this video we will see how logicallyyou are going to represent a stack whatare the introduction introductory partof stack some basic operations on stackwhat what are the meaning of thoseoperations as well as some applicationsof stack in next video we will see howto implement a stack right using arraysas well as using link inst so now likethis if you map this real-life stackobviously this is what a stack only oryou can say a stack of plates right oneplate is you have put one plate here ifyou want to play a place another platethen you will put on this plate thenthird and fourth and fifth like this youare going to place if you want to removea plate then first plate you will takeout first right so the principle is whatlast in first out you can say right thisis the last plate or you can say this isthe last CD you have put in the CD standand the last CD would be the first onethat you can take out so last in firstout leaf oh so the rule on which thisstack data structure works is what leavefor last in first out or you can sayfirst in last out this CD was first inbut if you want to take out this CD thenthis would be the last one you can takeout because for for taking out this CDoutside of the series 10 you how to takeout all the above CDs first of all rightso first any last out and if you willmap this real-life example of stack inthis with this stack then you can saythe logical representdatian of the stack is what we representstack something like this like this thisis what a stack you will represent thisit is a container which has only oneopen end you can insert data from hereyou can delete a data from here rightthere is no other way this is what astack logical representation of stuffthis is not actual representation ofstack right that we will discuss inlater we use rightand in stab insertion operation when youwill insert some data understand thatoperation is known as push right anddeletion operation is known as pop sotwo fundamental operations are there onthe stack one is push one is pop pushmeans inserting or putting a data intothe strap pop means taking out ordeleting the topmost data from the stackright two fundamental operations manymore operations are also there that ifyou are we will also discuss now seethis is the only and from where you aregoing to push and pop the data right sothis is known as top top of the steprightyou can insert a data and you can deletedata from top of the stack that end isknown as top from where you can insertyou can push and pop data right so nowwe will see some operations that areperformed on star data structure seefirst is push and in bracket you willwrite down that a data you want toinsert into stack C stack is what it isa collection of similar data type onlyit's not like that this is stack andhere the first data is suppose integerand after that I'm inserting a characterafter that again I am inserting to knowyou can only insert the data of similardata type either in teaser all the datashould be integer or character or floatsomething like this right see pushsecond operation is pop operationright here they don't pass any argumenthere why so because pop means always thetopmost element would be popped out fromthe step right so no need to passanything in this function these are twofundamental operation third operationmay be peak operation or somewhere it isalso known as top operation it meanswhat it is going to return the topmostelement of the stack without removingthat element from the stack see Bob willreturn the topmost element from thestack as well as it will remove thatelement from the stack see suppose thisis what I have stack and in this I havedata type 1 I have data 1 2 & 3 if youwrite down pop it means it will remove 3from the stack now this is the stepright and if on this stack you willperform peak operation or top operationit means it will return 3 but it willnot remove this from the step this isthe difference right fourth operationmay be is empty means it will true ifthe stack is empty there is known datain the list just in the stack rightotherwise it will return false sakeanother may be is full so this functionwill return true if this stack is fullotherwise it will return false see theseare not the only operation you canperform there are many more operationyou can perform on stack like you cannotperform search operation reverseoperation you can find out that minimumelement from the stack maximum valueelement from the stack right bad thingalso we will discuss in a later videosright these are some fundamentaloperations you can perform one stackfine now we will see the logicalrepresentation of stack as well as weare going to perform these operationsright so this is how we logicallyrepresent the step right not actually inthe memory this is just a logicalrepresentation right for yourunderstanding purpose nowobviously you want do you want to pushsome data in the stack right so you needto know the capacity of the stack or youcan say the size of the stack so youneed to allocate some memory to thestack right and how to fix that size howyou will get to know the size of thestack you can allocate the memory eitherusing static memory allocation ordynamic memory allocation there are twoways to implement stack static memoryallocation and dynamically you canimplement step static means using arraysyou can implement stack write dynamicmeans using linked lists you canimplement stack so these implementationswe will see in the next video with theproper with the help of an example pluscode right so now suppose I have takenthe size of the stack as 5 means thestack can store only five elementseither using by static memory locationor dynamic memory allocation right thatthing in detail we will discuss in nextvideo see suppose the capacity is here 5so you can insert here 5 elements onlyfineat starting at starting top is what topis equal to minus 1 fine 5 means you cansay you can insert 5 elements the indexwould be 0 first of all then 1 then 2then 3 then 4 from 0 to 4 right so here5 elements I can store this is thecapacity of the stack at starting top isminus 1 right minus 1 means somewherehere minus 1 hypothetically we assumethat here we have minus 1 index rightnow suppose in the empty stack you callthis pop operation what would happen popmeans the topmost element would beremoved but here we don't have anythingstack is empty in this case it is whatunder flow condition it will return whatthe stack is empty so this is what anunder flow condition you can say rightandnow suppose I'm calling push to writeactually implementation or loose also wewill see how to write down the code forpush and pop right here I am just givingyou the brief introduction push 2 minshere from the top one you will insertthis 2 right we have only one end sofirst of all what would happen top is -1so we will increment this top first ofall top plus plus it means top becomes 0now now here we have top and now youwill insert this to write again if youwill call push 3 again first of all topplus plusright now table becomes this one top ispointing to this one 1 and now you willinsert 3 here in the stack fine if youcall pop no need to pass any argumenthere why so because only the topmostelement would be removed from the stackyou cannot write here pop 2 means if youwant to remove this 2 you cannot see pop2 and this 2 would be removed no alwaysthis element would be removed right sopop 3 pop means the 3 would be removedfrom the stack and now see right now wewill do top minus minus means now againtop is 0Oh second again if you do pop in thatcase again though would be removed fromthe list or simply you can do top minusminus means top is now minus 1 right andif you will not remove this if you willnot take out this from the stack that isalso fine because this is now a garbagewe do not care what garbage value isthere in the stack because after that ifyou will again call push for then firstof all top plus plus means now topbecomes 0 minus 1 to 0here we will this too would beoverwritten and herefor would be storedright this thing also will discuss howto code push and pop operation fine nowsuppose I am going to push four timesone five six and seven one five six andseven again I am calling push eight nowthe stack is full Vegas capacity is onlyfive right so now it should return whatit is what an overflow condition we havediscussed what is under flow conditionnow here this is what overflow conditionif this dope is pointing to this maximumsize minus one the index is for maximumsize is five in that case it wouldreturn overflow condition you cannotinsert any data in the stack becausestack is full so this is what overflowcondition and now here if you will callis full function means it will returntrue if the stack is full and now thecondition is status full so it wouldreturn at this time is full functionwould return true right and when thereis nothing in the stack suppose we havepopped out all the data and after thatwe call is empty in that case it wouldreturn true because stack is empty howyou are going to code these function wewill see what so now what are theapplications of stack see the very basicapplication is if you want to reverse astring or in reverse a word then we willuse stack that is very simple suppose Iwant to reverse I have a string ABC andD so I want to reverse this I want toprint a DC B and a so simply what I cando I can push this into stack first ofall ABC and D and then pop out first ofall D would be popped out then C then Bthen e this is what we have reversed tothe string second application is forundo mechanism in text editor I guesseverybody have used this undo mechanismsuppose you have written something Ihave written ABCDE right in the texteditor in text editor andyou press ctrl-z the shortcut key forundo then you would be deleted then Dwould be deleted then C then B then athis mechanism is performed using stepin your text editors right thirdapplication maybe you can use it inrecursion or you can say in functioncall when you are going to call afunction then obviously something wouldbe returned some value would be returnlike and recursion means it is you cansay a chain or function call a functionis calling itself again and again rightso whenever that function would returnsomething then that values would bestored in stack how actually recursionwill work that also we will discuss whenwe will discuss recursion fourth may beto check the balance of the parenthesesparentheses means like this the compileruse stab for verifying the balance ofthe parentheses means for each openingparenthesis there is proper closingparenthesis at right place right supposehere is opening again here I have openedagain here I hope open so it means thereshould be three closing brackets rightso this balance would be checked usingstep this thing also we will discuss indetail right fourth application may bein fix to postfix or prefix conversionwhen you are going to convert theseexpressions from infix to postfix or infix to prefix in that case also startingto be used that thing also will discussentity right and as well as in manyalgorithm stack data structure is usedyou can say in topological sorting inDFS we are using staff in Tower of Hanoiproblem also we are going to use staffin tray traverser also we will use stepright so there are many applications ofstaff and sixth you can say for theevaluation of postfix expression we willuse step right that is also we'lldiscuss all the application we willdiscuss in detail this is just anintroductory video of this tag to getyou familiar with stack the logicalrepresentation of star how actually weare going to implement stack how we areactually going to code these operationswe will discuss in nextyou fine so I'll see in the next videotill then bye-bye take